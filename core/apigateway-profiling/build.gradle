buildscript {
    repositories {
        jcenter()
    }
}

apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.*
import com.bmuschko.gradle.docker.tasks.image.*

task dockerInfo(type: DockerInfo) {
    onNext {
        logger.quiet "Docker Info retreived for project ${project.name}:"
        logger.quiet "  OSType = ${it.osType}"
        logger.quiet "  Architecture = ${it.architecture}"
        owner.ext.dockerInfo = it
    }
}

task dockerBuildImage(type: DockerBuildImage) {
    def prefix = findProperty('dockerImagePrefix') ?: 'openwhisk'
    def tag = findProperty('dockerImageTag') ?: 'latest'
    tags = [ "apigateway-profiling:${tag}",
            "${prefix}/apigateway-profiling:${tag}"] as String[]
    inputDir = new File(buildDir, 'docker')
}

task copyFilesForImage(type: Copy) {
    from(new File(rootDir, 'common')) {
        include 'init.sh'
        include 'etc-api-gateway/**'
        include 'build-scripts/**'
    }
    from('./Dockerfile')
    into dockerBuildImage.inputDir
}

task copyApiGatewayConf(type: Copy, dependsOn: [copyFilesForImage, dockerInfo]) {
    from(new File(rootDir, 'common/api-gateway.conf.in')) {
        expand('worker_processes':'1',
            'pcre_jit': { dockerInfo.dockerInfo.architecture == 's390x' ? 'no':'yes' })
        rename { 'api-gateway.conf' }
    }
    into new File(dockerBuildImage.inputDir,'etc-api-gateway')
}
dockerBuildImage.dependsOn(copyApiGatewayConf)


